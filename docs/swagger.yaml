definitions:
  app.Pager:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_rows:
        type: integer
    type: object
  errcode.Error:
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Article:
    properties:
      content:
        type: string
      cover_image_url:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted:
        $ref: '#/definitions/gorm.DeletedAt'
      desc:
        type: string
      id:
        type: integer
      is_del:
        type: integer
      modified_by:
        type: string
      state:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.ArticleSwagger:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Article'
        type: array
      pager:
        $ref: '#/definitions/app.Pager'
    type: object
  model.Tag:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deleted:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_del:
        type: integer
      modified_by:
        type: string
      name:
        type: string
      state:
        type: integer
      updated_at:
        type: string
    type: object
  model.TagSwagger:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      pager:
        $ref: '#/definitions/app.Pager'
    type: object
  service.CreateArticleRequest:
    properties:
      content:
        type: string
      coverImageUrl:
        type: string
      createdBy:
        type: string
      desc:
        type: string
      state:
        type: integer
      tagID:
        type: integer
      title:
        type: string
    required:
    - content
    - coverImageUrl
    - createdBy
    - desc
    - tagID
    - title
    type: object
  service.CreateTagRequest:
    properties:
      createdBy:
        type: string
      name:
        type: string
      state:
        type: integer
    required:
    - createdBy
    - name
    type: object
  service.UpdateArticleRequest:
    properties:
      content:
        type: string
      coverImageUrl:
        type: string
      desc:
        type: string
      id:
        type: integer
      modifiedBy:
        type: string
      state:
        type: integer
      tagID:
        type: integer
      title:
        type: string
    required:
    - id
    - modifiedBy
    - tagID
    type: object
  service.UpdateTagRequest:
    properties:
      id:
        type: integer
      modifiedBy:
        type: string
      name:
        type: string
      state:
        type: integer
    required:
    - id
    - modifiedBy
    - name
    type: object
info:
  contact: {}
  description: Golang
  termsOfService: https://github.com/julianlee107/gin-blog
  title: 博客系统
  version: "2.0"
paths:
  /api/v1/article/{id}:
    delete:
      parameters:
      - description: 标签id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 删除单篇文章
    get:
      parameters:
      - description: 标签id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 获取单篇文章
  /api/v1/articles:
    get:
      parameters:
      - description: 文章标题
        in: query
        maxLength: 100
        name: title
        type: string
      - default: 1
        description: 状态
        in: query
        name: state
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/model.ArticleSwagger'
            type: array
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 获取多篇文章
    post:
      parameters:
      - description: 文章
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/service.CreateArticleRequest'
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 新增文章
  /api/v1/articles/{id}:
    put:
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文章
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/service.UpdateArticleRequest'
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 修改文章
  /api/v1/tags:
    get:
      parameters:
      - description: 标签名称
        in: query
        maxLength: 100
        name: name
        type: string
      - default: 1
        description: 状态
        in: query
        name: state
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/model.TagSwagger'
            type: array
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 获取多个标签
    post:
      parameters:
      - description: 标签
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/service.CreateTagRequest'
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 新增标签
  /api/v1/tags/{id}:
    delete:
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            type: string
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 删除标签
    get:
      parameters:
      - description: 标签id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 获取单个标签
    put:
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      - description: 标签
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/service.UpdateTagRequest'
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 更改标签
  /upload/file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件
        in: formData
        name: file
        required: true
        type: file
      - description: 文件类型
        in: formData
        name: type
        required: true
        type: string
      responses:
        "200":
          description: 成功
          schema:
            type: string
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 上传文件
swagger: "2.0"
